%% Clear everything out

clc

fprintf('%s - Clearing everything out\n', datetime)

close all
clearvars

%% Import data from text file
% Script for importing data from the following text file:
%
%    filename:
%
% Auto-generated by MATLAB on 28-Nov-2023 15:56:56

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 19);

% Specify range and delimiter
opts.DataLines = [2, Inf];
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = ["Var1", "Var2", "StartWeightlbs", "StartFastingGlucosemgdL", "StartFastingKetonesmmolL", "ActiveEnergycal", "BasalEnergycal", "Sleepsec", "NutritionEnergycal", "TotalCarbsg", "Proteing", "TotalFatsg", "Sugarg", "Fiberg", "SugarAlcoholsg", "EndWeightlbs", "WeightDifferencelbs", "EndFastingGlucosemgdL", "EndFastingKetonesmmolL"];
opts.SelectedVariableNames = ["StartWeightlbs", "StartFastingGlucosemgdL", "StartFastingKetonesmmolL", "ActiveEnergycal", "BasalEnergycal", "Sleepsec", "NutritionEnergycal", "TotalCarbsg", "Proteing", "TotalFatsg", "Sugarg", "Fiberg", "SugarAlcoholsg", "EndWeightlbs", "WeightDifferencelbs", "EndFastingGlucosemgdL", "EndFastingKetonesmmolL"];
opts.VariableTypes = ["string", "string", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Specify variable properties
opts = setvaropts(opts, ["Var1", "Var2"], "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["Var1", "Var2"], "EmptyFieldRule", "auto");

% Import the data
AggregatedData = readtable("AggregatedData.csv", opts);

%% Convert to output type
AggregatedData = table2array(AggregatedData);

%% Clear temporary variables
clear opts

%% Plot interesting stuff

figure
plot(AggregatedData(:,11),AggregatedData(:,16),'.')
grid on
xlabel('Consumed Sugars (g)')
ylabel('Next Days Fasting Glucose (mg/dL)')

figure
plot(AggregatedData(:,11),AggregatedData(:,17),'.')
grid on
xlabel('Consumed Sugars (g)')
ylabel('Next Days Fasting Ketones (mmol/L)')

figure
plot(AggregatedData(:,3),AggregatedData(:,16),'.')
grid on
xlabel('Starting Fasting Ketones (mmol/L)')
ylabel('Next Days Fasting Glucose (mg/dL)')

figure
plot(AggregatedData(:,7),AggregatedData(:,15),'.')
grid on
xlabel('Nutrition Energy (cals)')
ylabel('Weight Change (lbs)')

figure
plot(AggregatedData(:,7)-AggregatedData(:,4)-AggregatedData(:,5),AggregatedData(:,15),'.')
grid on
xlabel('Calorie Delta (cals)')
ylabel('Weight Change (lbs)')

%% Perform linear regression

fprintf('Unnormalized (Weight Delta Target)\n');

x = AggregatedData(:,2:13);
y = AggregatedData(:,15:17);
b = x\y

fprintf('Unnormalized (Weight Delta Target) w/ Bias\n');

x = [AggregatedData(:,2:13) ones(length(AggregatedData),1)];
y = AggregatedData(:,15:17);
b = x\y

fprintf('Unnormalized (Absolute Weight Target)\n');

x = AggregatedData(:,1:13);
y = AggregatedData(:,[14 16 17]);
b = x\y

fprintf('Unnormalized (Absolute Weight Target) w/ Bias Term\n');

x = [AggregatedData(:,1:13) ones(length(AggregatedData),1)];
y = AggregatedData(:,[14 16 17]);
b = x\y

% features
AggregatedData(:,1) = AggregatedData(:,1) / 230; % starting weight
AggregatedData(:,2) = AggregatedData(:,2) / 110; % blood glucose
AggregatedData(:,3) = AggregatedData(:,3) / 5; % ketones
AggregatedData(:,4) = AggregatedData(:,4) / 2000; % active energy
AggregatedData(:,5) = AggregatedData(:,5) / 2500; % basal energy
AggregatedData(:,6) = AggregatedData(:,6) / 35000; % sleep
AggregatedData(:,7) = AggregatedData(:,7) / 6500; % calories
AggregatedData(:,8) = AggregatedData(:,8) / 400; % total carbs 
AggregatedData(:,9) = AggregatedData(:,9) / 350; % protein
AggregatedData(:,10) = AggregatedData(:,10) / 450; % total fats
AggregatedData(:,11) = AggregatedData(:,11) / 175; % sugar
AggregatedData(:,12) = AggregatedData(:,12) / 125; % fiber
AggregatedData(:,13) = AggregatedData(:,13) / 125; % sugar alcohols

% targets
AggregatedData(:,14) = AggregatedData(:,14) / 230; % end weight
AggregatedData(:,15) = AggregatedData(:,15) / 10; % weight difference
AggregatedData(:,16) = AggregatedData(:,16) / 110; % blood glucose
AggregatedData(:,17) = AggregatedData(:,17) / 5; % ketones

fprintf('Normalized (Weight Delta Target)\n');

x = AggregatedData(:,2:13);
y = AggregatedData(:,15:17);
b = x\y

fprintf('Normalized (Weight Delta Target) w/ Bias Term\n');

x = [AggregatedData(:,2:13) ones(length(AggregatedData),1)];
y = AggregatedData(:,15:17);
b = x\y

fprintf('Normalized (Absolute Weight Target)\n');

x = AggregatedData(:,1:13);
y = AggregatedData(:,[14 16 17]);
b = x\y

fprintf('Normalized (Absolute Weight Target) w/ Bias Term\n');

x = [AggregatedData(:,1:13) ones(length(AggregatedData),1)];
y = AggregatedData(:,[14 16 17]);
b = x\y